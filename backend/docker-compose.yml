version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./data:/app/data
      - ./.env:/app/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/dspipexp
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
      - ENVIRONMENT=development
      - PORT=8000
      - HOST=0.0.0.0
      - BASE_DIR=/app
      - GENIUS_ACCESS_TOKEN=${GENIUS_ACCESS_TOKEN}
    command: >
      sh -c "alembic upgrade head &&
             python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dspipexp
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:7
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    sysctls:
      - net.core.somaxconn=511

volumes:
  postgres_data:
  redis_data: 